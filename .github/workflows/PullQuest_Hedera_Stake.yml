name: PullQuestAI Hedera Stake

on:
  issue_comment:
    types: [created]

jobs:
  handle-hedera-stake:
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      BACKEND_URL_HEDERA: https://hedera-smart-contracts.onrender.com
      BACKEND_URL_PULLQUEST: https://pullquestgithubbackend-1.onrender.com
      BACKEND_URL_COMMENT: https://hedera-smart-contracts.onrender.com

    steps:
      - name: Check for stake trigger phrase
        id: check-comment
        run: |
          comment_body="${{ github.event.comment.body }}"
          if [[ "$comment_body" == *"@pullquestai stake"* ]]; then
            echo "trigger_action=true" >> $GITHUB_OUTPUT
            echo "✅ Stake request detected!"
          else
            echo "trigger_action=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Not a stake request, skipping..."
          fi

      - name: Build payload and call staking API
        id: hedra-stake-call
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: |
          githubUsername="${{ github.event.issue.user.login }}"
          repository="${{ github.event.repository.name }}"
          issueNumber="${{ github.event.issue.number }}"
          stakeAmount="1"

          payload=$(jq -n \
            --arg githubUsername "$githubUsername" \
            --arg repository "$repository" \
            --argjson issueNumber "$issueNumber" \
            --arg stakeAmount "$stakeAmount" \
            '{
              githubUsername: $githubUsername,
              repository: $repository,
              issueNumber: $issueNumber,
              stakeAmount: $stakeAmount
            }')

          echo "📦 Payload for Hedera stake call:"
          echo "$payload"

          response=$(curl --fail --show-error --silent \
            -X POST "$BACKEND_URL_HEDERA/api/stake" \
            -H "Content-Type: application/json" \
            --data-binary "$payload")

          echo "hedra_response=$response" >> $GITHUB_OUTPUT

      - name: Notify PullQuest backend
        if: steps.hedra-stake-call.conclusion == 'success' && steps.check-comment.outputs.trigger_action == 'true'
        id: notify-pullquest
        run: |
          echo "Notifying PullQuest backend..."

          notification_payload=$(jq -n \
            --arg owner "${{ github.event.repository.owner.login }}" \
            --arg repo "${{ github.event.repository.name }}" \
            --argjson prNumber "${{ github.event.issue.number }}" \
            '{
              owner: $owner,
              repo: $repo,
              prNumber: $prNumber,
              message: "Stake request processed successfully"
            }')

          curl --fail --show-error --silent \
            -X POST "$BACKEND_URL_PULLQUEST/api/notify-stake" \
            -H "Content-Type: application/json" \
            --data-binary "$notification_payload"

      - name: Post stake comment
        if: steps.notify-pullquest.conclusion == 'success' && steps.check-comment.outputs.trigger_action == 'true'
        run: |
          echo "Posting stake comment..."

          comment_payload=$(jq -n \
            --arg prNumber "${{ github.event.issue.number }}" \
            --arg user "${{ github.event.issue.user.login }}" \
            '{
              prNumber: $prNumber,
              user: $user
            }')

          curl --fail --show-error --silent \
            -X POST "$BACKEND_URL_COMMENT/api/comment/stake" \
            -H "Content-Type: application/json" \
            --data-binary "$comment_payload"

      - name: Done
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: echo "✅ Stake flow complete."
