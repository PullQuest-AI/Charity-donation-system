name: PullQuestAI Hedera Stake

on:
  issue_comment:
    types: [created]

jobs:
  handle-hedera-stake:
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      BACKEND_URL: https://hedera-smart-contracts.onrender.com

    steps:
      - name: Check for stake trigger phrase
        id: check-comment
        run: |
          comment_body="${{ github.event.comment.body }}"
          if [[ "$comment_body" == *"@pullquestai stake"* ]]; then
            echo "trigger_action=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Stake request detected!"
          else
            echo "trigger_action=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Not a stake request, skipping..."
          fi

      - name: Build payload and call staking API
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: |
          # Extract repo, PR number, author info
          githubUsername="${{ github.event.issue.user.login }}"
          repository="${{ github.event.repository.name }}"
          issueNumber="${{ github.event.issue.number }}"

          # For stakeAmount, set a fixed or ENV value; here using 1 HBAR as example
          stakeAmount="1"

          payload=$(jq -n \
            --arg githubUsername "$githubUsername" \
            --arg repository "$repository" \
            --argjson issueNumber "$issueNumber" \
            --arg stakeAmount "$stakeAmount" \
            '{
              githubUsername: $githubUsername,
              repository: $repository,
              issueNumber: $issueNumber,
              stakeAmount: $stakeAmount
            }')

          echo "üì¶ Payload:"
          echo "$payload"

          curl --fail --show-error --silent \
            -X POST "$BACKEND_URL/api/stake" \
            -H "Content-Type: application/json" \
            --data-binary "$payload"

      - name: Done
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: echo "‚úÖ Stake request sent to Hedera backend."
