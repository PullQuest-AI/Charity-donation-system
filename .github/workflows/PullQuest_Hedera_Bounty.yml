name: PullQuestAI Bounty Transfer

on:
  issue_comment:
    types: [created]

jobs:
  handle-bounty:
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      BACKEND_URL_HEDERA: https://hedera-smart-contracts.onrender.com
      BACKEND_URL_PULLQUEST: https://pullquestgithubbackend-1.onrender.com
      
    steps:
      - name: Check for bounty award trigger phrase
        id: check-comment
        run: |
          comment_body="${{ github.event.comment.body }}"
          echo "Comment body: $comment_body"
          
          # Check for bounty award pattern: @pullquestai add 50HBAR Bounty to @username
          if [[ "$comment_body" =~ @pullquestai[[:space:]]+add[[:space:]]+([0-9]+\.?[0-9]*)HBAR[[:space:]]+Bounty[[:space:]]+to[[:space:]]+@([a-zA-Z0-9_-]+) ]]; then
            bounty_amount="${BASH_REMATCH[1]}"
            target_username="${BASH_REMATCH[2]}"
            echo "trigger_action=true" >> $GITHUB_OUTPUT
            echo "bounty_amount=$bounty_amount" >> $GITHUB_OUTPUT
            echo "target_username=$target_username" >> $GITHUB_OUTPUT
            echo "✅ Bounty award request detected: ${bounty_amount} HBAR to @${target_username}"
          else
            echo "trigger_action=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Not a bounty award request, skipping..."
          fi

      - name: Fetch recipient wallet address
        id: fetch-wallet
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: |
          targetUsername="${{ steps.check-comment.outputs.target_username }}"
          
          echo "🔍 Fetching wallet address for @${targetUsername}..."
          
          # Use fallback wallet for demo (replace with actual API call when ready)
          recipient_wallet="0x2A017065b70cdcDE126Fe674e968Aa63293ABD9a"
          
          echo "recipient_wallet=$recipient_wallet" >> $GITHUB_OUTPUT
          echo "📋 Using wallet address: $recipient_wallet"

      - name: Execute bounty transfer
        id: bounty-transfer
        if: steps.check-comment.outputs.trigger_action == 'true'
        run: |
          targetUsername="${{ steps.check-comment.outputs.target_username }}"
          bountyAmount="${{ steps.check-comment.outputs.bounty_amount }}"
          recipientWallet="${{ steps.fetch-wallet.outputs.recipient_wallet }}"
          prNumber="${{ github.event.issue.number }}"
          awardedBy="${{ github.event.comment.user.login }}"
          repository="${{ github.event.repository.name }}"
          
          echo "💰 Initiating bounty transfer..."
          echo "- Recipient: @${targetUsername}"
          echo "- Wallet: ${recipientWallet}"
          echo "- Amount: ${bountyAmount} HBAR"
          
          # Create transfer payload
          transfer_payload=$(jq -n \
            --arg toAddress "$recipientWallet" \
            --arg amount "$bountyAmount" \
            --arg memo "Bounty payment for @${targetUsername} - ${bountyAmount} HBAR bounty in ${repository} PR #${prNumber} by @${awardedBy}" \
            '{
              toAddress: $toAddress,
              amount: ($amount | tonumber),
              memo: $memo
            }')

          echo "📦 Transfer payload:"
          echo "$transfer_payload"

          echo "🔄 Making bounty transfer request..."
          transfer_response=$(curl --fail --show-error --silent \
            -X POST "$BACKEND_URL_HEDERA/api/bounty/transfer/send" \
            -H "Content-Type: application/json" \
            --data-binary "$transfer_payload" || echo "TRANSFER_FAILED")

          echo "📥 Transfer API Response:"
          echo "$transfer_response"
          
          # Check if transfer was successful
          if [[ "$transfer_response" == "TRANSFER_FAILED" ]]; then
            echo "❌ Bounty transfer failed"
            exit 1
          fi
          
          # Extract transfer details
          transfer_tx_hash=$(echo "$transfer_response" | jq -r '.data.txHash // "N/A"')
          transfer_amount_sent=$(echo "$transfer_response" | jq -r '.data.amountTransferred // "0"')
          
          echo "transfer_tx_hash=$transfer_tx_hash" >> $GITHUB_OUTPUT
          echo "transfer_amount_sent=$transfer_amount_sent" >> $GITHUB_OUTPUT
          
          echo "✅ Bounty transfer completed!"
          echo "- Transaction Hash: $transfer_tx_hash"
          echo "- Amount Sent: $transfer_amount_sent HBAR"

      - name: Post bounty comment
        if: steps.bounty-transfer.outcome == 'success' && steps.check-comment.outputs.trigger_action == 'true'
        run: |
          echo "💬 Posting bounty comment..."

          targetUsername="${{ steps.check-comment.outputs.target_username }}"
          bountyAmount="${{ steps.check-comment.outputs.bounty_amount }}"
          awardedBy="${{ github.event.comment.user.login }}"
          transferTxHash="${{ steps.bounty-transfer.outputs.transfer_tx_hash }}"
          transferAmount="${{ steps.bounty-transfer.outputs.transfer_amount_sent }}"

          # Create comment payload - matching your working curl command
          comment_payload=$(jq -n \
            --argjson prNumber "${{ github.event.issue.number }}" \
            --arg targetUser "$targetUsername" \
            --arg awardedBy "$awardedBy" \
            --arg bountyAmount "$transferAmount" \
            --arg owner "${{ github.event.repository.owner.login }}" \
            --arg repo "${{ github.event.repository.name }}" \
            --arg transferTxHash "$transferTxHash" \
            '{
              prNumber: $prNumber,
              targetUser: $targetUser,
              awardedBy: $awardedBy,
              bountyAmount: $bountyAmount,
              owner: $owner,
              repo: $repo,
              transferTxHash: $transferTxHash
            }')

          echo "📦 Comment payload:"
          echo "$comment_payload"

          echo "🔄 Making comment request..."
          final_response=$(curl --fail --show-error --silent \
            -X POST "$BACKEND_URL_PULLQUEST/api/comment/BountyHedera" \
            -H "Content-Type: application/json" \
            --data-binary "$comment_payload" || echo "COMMENT_POST_FAILED")
          
          echo "📥 Comment Response: $final_response"
          
          if [[ "$final_response" == "COMMENT_POST_FAILED" ]]; then
            echo "❌ Comment posting failed"
            exit 1
          else
            echo "✅ Bounty workflow completed successfully!"
          fi

      - name: Summary
        if: always()
        run: |
          echo "📋 Bounty Workflow Summary:"
          echo "- Trigger: ${{ steps.check-comment.outputs.trigger_action }}"
          echo "- User: ${{ steps.check-comment.outputs.target_username }}"
          echo "- Amount: ${{ steps.check-comment.outputs.bounty_amount }} HBAR"
          echo "- Transfer: ${{ steps.bounty-transfer.outcome }}"
          echo "- TX Hash: ${{ steps.bounty-transfer.outputs.transfer_tx_hash }}"